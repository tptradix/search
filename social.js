import axios from 'axios';
import cheerio from 'cheerio';
import UserAgent from 'user-agents';

async function vkFind(user) {
    user = user.replace("/", '@');
    const headers = { 'User-Agent': new UserAgent().toString() };

    let vkAll = "üàÇÔ∏è <b>–í–ö –Ω–µ –Ω–∞–π–¥–µ–Ω</b>\n‚Ü≥ None";
    let tgAll = "‚úàÔ∏è <b>Telegram –Ω–µ –Ω–∞–π–¥–µ–Ω</b>\n‚Ü≥ None\n";
    let okResult = "üÜó <b>OK –Ω–µ –Ω–∞–π–¥–µ–Ω</b>\n‚Ü≥ None";

    const vkUrl = `https://vk.com/${user}`;
    const tgUrl = `https://t.me/${user}`;

    try {
        // Check existence
        const [vkResponse, tgResponse] = await Promise.all([
            axios.get(vkUrl),
            axios.get(tgUrl)
        ]);

        if (![vkResponse, tgResponse].some(resp => resp.status === 200)) {
            return "Error";
        }

        // VK Search
        if (vkResponse.status === 200) {
            const vkApiUrl = `https://api.vk.com/method/users.get?access_token=504ab56a504ab56a504ab56ac953580c505504a504ab56a33bbb566f68e3c1c0464b299&user_id=${user}&v=5.92`;
            const vkApiResp = await axios.get(vkApiUrl);
            const vkData = vkApiResp.data.response[0];

            if (vkData) {
                vkAll = `üàÇÔ∏è <b>–í–ö –Ω–∞–π–¥–µ–Ω</b>
<b>‚îú ID:</b> ${vkData.id}
<b>‚îú –ò–º—è:</b> ${vkData.first_name}
<b>‚îú –§–∞–º–∏–ª–∏—è:</b> ${vkData.last_name}
<b>‚îú –õ–æ–≥–∏–Ω:</b> ${user}
‚îú <b>–ó–∞–∫—Ä—ã—Ç—ã–π –ø—Ä–æ—Ñ–∏–ª—å:</b> ${vkData.is_closed}
‚îî <b>–°—Å—ã–ª–∫–∞:</b> vk.com/${user}\n`;
            }
        }

        // Telegram Search
        if (tgResponse.status === 200) {
            const tgSoup = cheerio.load(tgResponse.data);
            const tgName = tgSoup('span[dir="auto"]').text() || 'None';
            const tgDesc = tgSoup('div.tgme_page_description').text() || 'None';
            tgAll = `‚úàÔ∏è <b>Telegram –Ω–∞–π–¥–µ–Ω</b>
‚îú <b>–ò–º—è:</b> ${tgName}
‚îú <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> ${tgDesc}
‚îî <b>Username:</b> @${user}\n`;
        }

        // OK Search
        const okUrl = `https://ok.ru/${user}`;
        const okResponse = await axios.get(okUrl, { headers });
        if (okResponse.status === 200) {
            const okSoup = cheerio.load(okResponse.data);
            const okName = okSoup('h1.__user-profile-name-decorator').text() || 'None';
            const okLastOnline = okSoup('span.profile-user-info_status.__new_status_color').text() || 'None';
            const okBirthday = okSoup('div.user-profile_i_value').text() || 'None';
            const okFriends = okSoup('span.navMenuCount').text() || 'None';
            okResult = `üÜó <b>OK –Ω–∞–π–¥–µ–Ω</b>
‚îú <b>–ò–º—è:</b> ${okName}
‚îú <b>–ë—ã–ª –≤ —Å–µ—Ç–∏:</b> ${okLastOnline}
‚îú <b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> ${okBirthday}
‚îú <b>–î—Ä—É–∑–µ–π:</b> ${okFriends}
‚îú <b>–ù–∏–∫:</b> ${user}
‚îî <b>–°—Å—ã–ª–∫–∞:</b> ok.ru/${user}`;
        }

        return `üë§ <b>–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–≤–∞—Ç–µ–ª–µ</b>
${vkAll}
${tgAll}
${okResult}

<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n`;

    } catch (error) {
        return `Error: ${error.message}`;
    }
}

export default vkFind;